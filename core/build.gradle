buildscript {
  repositories {
    maven { url 'https://jitpack.io' }
  }

  dependencies {
    classpath files("../bnf-extender-task/build/libs/bnf-extender-task-0.1.0-SNAPSHOT.jar")
    classpath "com.github.hurricup:gradle-grammar-kit-plugin:2017.1.1"
  }
}

apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'org.jetbrains.grammarkit'
grammarKit {
  grammarKitRelease = '1.5.2'
}

import org.jetbrains.grammarkit.tasks.GenerateLexer
import org.jetbrains.grammarkit.tasks.GenerateParser
import com.alecstrong.sqlite.psi.tasks.BnfExtenderTask

sourceCompatibility = JavaVersion.VERSION_1_6
targetCompatibility = JavaVersion.VERSION_1_6

sourceSets {
  main.java.srcDir "gen"
}

dependencies {
  compileOnly dep.intellijCore

  compile dep.kotlinStdLib
  compile dep.kotlinReflect
}

task generateSqliteLexer(type: GenerateLexer) {
  source 'src/main/grammars/SqliteLexer.flex'
  targetDir 'gen/com/alecstrong/sqlite/psi/core/lexer/'
  targetClass 'SqliteLexer'
  purgeOldFiles = true
}

task generateSqliteExtendableGrammar(dependsOn: ':bnf-extender-task:jar', type: BnfExtenderTask) {
  source "src"
  include "main/grammars/sqlite.bnf"
  outputDirectory = file("gen")
  outputPackage = "com.alecstrong.sqlite.psi.core"
}

task generateSqliteParser(type: GenerateParser) {
  source "gen/com/alecstrong/sqlite/psi/core/grammars/sqlite.bnf"
  targetRoot = 'gen/'
  pathToParser '/com/alecstrong/sqlite/psi/core/parser/SqliteParser.java'
  pathToPsiRoot '/com/alecstrong/sqlite/psi/core/psi'
  purgeOldFiles = true
}

task cleanUpGen(type: Delete) {
  delete 'gen'
}

generateSqliteLexer.outputs.upToDateWhen { false }

generateSqliteParser.dependsOn generateSqliteExtendableGrammar
generateSqliteParser.outputs.upToDateWhen { false }

compileKotlin.dependsOn cleanUpGen, generateSqliteLexer, generateSqliteParser